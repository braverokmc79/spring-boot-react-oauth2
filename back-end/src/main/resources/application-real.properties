#\uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD3EC\uD2B8 \uC124\uC815
server.port = 5000
spring.application.name=1_sb_react
logging.level.root=WARN
spring.jpa.open-in-view=false


#redis \uC124\uC815
spring.data.redis.lettuce.pool.max-active=10
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=redis_\uC11C\uBC84\uBE44\uBC88


#Mysql server
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://macaronics.net:3306/shopJpaGradle2
spring.datasource.username=\uC544\uC774\uB514
spring.datasource.password=\uBE44\uBC88

#\uC811\uADFC\uD1A0\uD070\uC2DC\uAC04: 5\uC2DC\uAC04  #60*60*5*1000 =18000000    #\uC0D8\uD50C\uD14C\uC2A4\uD2B8 :30\uCD08 ==>30*1000=30000
spring.jwt.token.access-expiration-time=60000
#\uAC31\uC2E0\uD1A0\uD070\uC2DC\uAC04: 7\uC77C  #60*60*24*7*1000=604800000  #\uC0D8\uD50C\uD14C\uC2A4\uD2B8: 1\uBD84 ===>60000
spring.jwt.token.refresh-expiration-time=120000


#oauth2 frontend \uC8FC\uC18C
serverRedirectFrontUrl=https://ma7front.p-e.kr



#\uAE43\uD5C8\uBE0C
#http://localhost:5000/oauth2/authorization/github
spring.security.oauth2.client.registration.github.client-id=\uAE43\uD5C8\uBE0CClient_ID
spring.security.oauth2.client.registration.github.client-secret=\uAE43\uD5C8\uBE0CClient_SECRET
spring.security.oauth2.client.registration.github.redirect-uri=https://ma7server.p-e.kr/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email, read:user

#provider \uB294 \uB9AC\uC18C\uC2A4 \uC81C\uACF5\uC790\uC778 github \uC5D0 \uB300\uD55C \uC815\uBCF4\uB97C \uBA85\uC2DC\uD55C \uAC83, \uB530\uB77C\uC11C Todo \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC774 \uC18C\uC15C \uB85C\uADF8\uC778\uC694\uCCAD\uC744 \uD560\uB54C \uD574\uB2F9 \uC8FC\uC18C\uB85C \uB9AC\uB2E4\uC774\uB809\uD2B8 \uD55C\uB2E4.
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
#token-uri \uB294 \uAE43\uD5C8\uBE0C\uC5D0 \uC561\uC138\uC2A4 \uAC00\uB2A5\uD55C \uC5D1\uC138\uC2A4 \uD1A0\uD070\uC744 \uBC1B\uC544\uC624\uAE30 \uC704\uD55C \uC8FC\uC18C
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
#\uC720\uC800\uC758 \uC815\uBCF4\uB97C \uAC00\uC838\uC624\uAE30 \uC704\uD574\uC11C\uB294 \uC561\uC138\uC2A4 \uD1A0\uD070\uC774\uD544\uC694\uD558\uBBC0\uB85C \uC6B0\uB9AC\uB294 token-uri \uB97C \uC774\uC6A9\uD574 \uBA3C\uC800 \uC561\uC138\uC2A4 \uD1A0\uD070\uC744 \uBC1B\uC740\uD6C4, user-info-uri \uB85C \uC0AC\uC6A9\uC790\uC758 \uC815\uBCF4\uB97C \uC694\uCCAD\uD560\uB54C \uD1A0\uD070\uC744 \uD568\uAED8 \uBCF4\uB0B8\uB2E4.
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user


#\uAD6C\uAE00
spring.security.oauth2.client.registration.google.client-id=dsa
spring.security.oauth2.client.registration.google.client-secret=313123
spring.security.oauth2.client.registration.google.scope=profile,email


#\uB124\uC774\uBC84
# registration
spring.security.oauth2.client.registration.naver.client-id=\uD074\uB77C\uC774\uC5B8\uD2B8\uC544\uC774\uB514
spring.security.oauth2.client.registration.naver.client-secret=\uD074\uB77C\uC774\uC5B8\uD2B8\uC2DC\uD06C\uB9BF
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email.profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

## \uCE74\uCE74\uC624 ##
# registration
spring.security.oauth2.client.registration.kakao.client-id=\uD074\uB77C\uC774\uC5B8\uD2B8\uC544\uC774\uB514
spring.security.oauth2.client.registration.kakao.client-secret=\uD074\uB77C\uC774\uC5B8\uD2B8\uC2DC\uD06C\uB9BF
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id




#create , update , none
spring.jpa.hibernate.ddl-auto=update


#\uD30C\uC77C \uD55C \uAC1C\uB2F9 \uCD5C\uB300 \uC0AC\uC774\uC988
spring.servlet.multipart.maxFileSize=20MB
#\uC694\uCCAD\uB2F9 \uCD5C\uB300 \uD30C\uC77C \uD06C\uAE30
spring.servlet.multipart.maxRequestSize=100MB

#\uC0C1\uD488 \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC \uACBD\uB85C
itemImgLocation=/uploads/shop/item

#\uB9AC\uC18C\uC2A4 \uC5C5\uB85C\uB4DC \uACBD\uB85C
uploadPath=file:/uploads/shop/

#\uAE30\uBCF8 batch size \uC124\uC815
spring.jpa.properties.hibernate.default_batch_fetch_size=1000





